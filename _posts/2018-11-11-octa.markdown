---
title:  "OCTA - Oracle Classifier for Text Analysis"
date:   2018-11-11 21:04:00
categories: [natural language processing, machine learning]
tags: [Python, ML, NLP, NLTK, Scikit-learn]
---

## Background

<p>In computing, oracle (test) is a mechanism for determining whether a test has passed or failed. The use of oracles involves comparing the outputs of the system under test for a test-case input.
Determining the correct output for a given input is known as the test oracle problem.</p>

<p>Oracles can be categorized in:</p> **Specified - Derived - Implicit - Human** as you can check <a href="https://ieeexplore.ieee.org/abstract/document/6963470/">here</a>

<p>One of the problems is related a oracles in test case documents. In a determined context, testers were writting test case documents kind confused and this was causing some derived oracle problems, so I decided to built an classifier, using the company's project dataset to help testers write better test case documents, reducing the oracle problems and making easier to verify its behavior</p>

I made a tool called OCTA for test case documents classification. I used controlled language (PENG) concepts to standard the text, creating a catalog of good practices of how a test case document should be written in terms of oracle. And also I read a lot of oracle problem acticles to get knowledge of what scientists were doing to contribute to this subject. 

## Libraries imported 

{% highlight python %}
import matplotlib.pyplot as plt
import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report
from sklearn.model_selection import train_test_split, GridSearchCV, StratifiedKFold, cross_val_score
from sklearn.svm import SVC

from utils import preprocess_sentences
{% endhighlight %}

Here I'm using sklearn, nltk, np and so on. The method to process the sentences was TF-IDF. 

// under construction // 
